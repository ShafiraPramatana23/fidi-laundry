package com.fidilaundry.app.ui.home.masterimport android.os.Bundleimport android.text.InputTypeimport com.fidilaundry.app.Rimport com.fidilaundry.app.basearch.localpref.PaperPrefsimport com.fidilaundry.app.basearch.viewmodel.HomeViewModelimport com.fidilaundry.app.basearch.viewmodel.MasterViewModelimport com.fidilaundry.app.databinding.ActivityAddPriceBindingimport com.fidilaundry.app.ui.base.BaseActivityimport com.fidilaundry.app.ui.home.master.model.DropdownItemimport com.fidilaundry.app.ui.home.master.model.MasterMenuimport com.fidilaundry.app.ui.home.order.interfaces.IFItemClickimport com.fidilaundry.app.util.LoadingDialogimport com.fidilaundry.app.util.dialog.DialogDropdownimport com.fidilaundry.app.util.dialog.DialogServiceimport com.fidilaundry.app.util.fdialog.ConfirmMessageimport com.fidilaundry.app.util.fdialog.FGCallbackimport com.fidilaundry.app.util.setSafeOnClickListenerimport org.koin.androidx.viewmodel.ext.android.getViewModelimport java.util.ArrayListclass AddPriceActivity : BaseActivity(), IFItemClick {    lateinit var paperPrefs: PaperPrefs    lateinit var loadingDialog: LoadingDialog    private var typeDropdown: Int = 0    private val binding: ActivityAddPriceBinding by binding(R.layout.activity_add_price)    private val viewModel: MasterViewModel by lazy {        getViewModel(MasterViewModel::class)    }    override fun onCreate(savedInstanceState: Bundle?) {        super.onCreate(savedInstanceState)        binding.apply {            lifecycleOwner = this@AddPriceActivity            this.vm = viewModel        }        var type = intent.getStringExtra("type")        when (type) {            "1" -> binding.tvTitle.text = "Tambah Harga"            "2" -> binding.tvTitle.text = "Ubah Harga"        }        binding.etCtg.inputType = InputType.TYPE_NULL        binding.etBarang.inputType = InputType.TYPE_NULL        binding.etService.inputType = InputType.TYPE_NULL        binding.ivBack.setSafeOnClickListener {            finish()        }        binding.btnDelete.setSafeOnClickListener {            confirmDelete()        }        binding.etCtg.setSafeOnClickListener {            typeDropdown = 1            val myRoundedBottomSheet = DialogDropdown(1, ctgList, this)            myRoundedBottomSheet.show(supportFragmentManager, myRoundedBottomSheet.tag)        }        binding.etBarang.setSafeOnClickListener {            typeDropdown = 2            val myRoundedBottomSheet = DialogDropdown(2, serviceList, this)            myRoundedBottomSheet.show(supportFragmentManager, myRoundedBottomSheet.tag)        }        binding.etService.setSafeOnClickListener {            typeDropdown = 3            val myRoundedBottomSheet = DialogDropdown(3, serviceList, this)            myRoundedBottomSheet.show(supportFragmentManager, myRoundedBottomSheet.tag)        }    }    private fun confirmDelete() {        ConfirmMessage(            this,            "Apakah Anda yakin menghapus data ini?",            "", "",            "Hapus", "Batal",            object : FGCallback {                override fun onCallback() {                }            }        )    }    private val ctgList: List<DropdownItem>        get() {            val appList: MutableList<DropdownItem> = ArrayList()            appList.add(DropdownItem(1, "Satuan"))            appList.add(DropdownItem(2, "Kiloan"))            return appList        }    private val serviceList: List<DropdownItem>        get() {            val appList: MutableList<DropdownItem> = ArrayList()            appList.add(DropdownItem(1, "Cuci Kering"))            appList.add(DropdownItem(2, "Cuci Basah"))            appList.add(DropdownItem(3, "Cuci Setrika"))            appList.add(DropdownItem(4, "Setrika"))            return appList        }    override fun onItemSelected(value: String?, id: String) {        when (typeDropdown) {            1 -> {                viewModel.ctgValue.value = value!!            }            2 -> {                viewModel.itemsValue.value = value!!            }            3 -> {                viewModel.serviceValue.value = value!!            }        }        println("wkwkwkw :: "+value)    }    override fun onItemSelected(value: String?, id: String, type: Int) {    }}