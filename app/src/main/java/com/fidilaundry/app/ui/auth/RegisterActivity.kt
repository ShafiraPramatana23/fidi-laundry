package com.fidilaundry.app.ui.authimport android.content.Intentimport android.os.Bundleimport androidx.lifecycle.Observerimport com.fidilaundry.app.Rimport com.fidilaundry.app.basearch.localpref.PaperPrefsimport com.fidilaundry.app.basearch.viewmodel.RegisterViewModelimport com.fidilaundry.app.databinding.ActivityRegisterBindingimport com.fidilaundry.app.model.response.LoginResponseimport com.fidilaundry.app.ui.base.BaseActivityimport com.fidilaundry.app.util.LoadingDialogimport com.fidilaundry.app.util.fdialog.ErrorMessageimport com.fidilaundry.app.util.fdialog.FGCallbackimport com.fidilaundry.app.util.fdialog.SuccessMessageimport com.fidilaundry.app.util.fdialog.WarningMessageimport com.fidilaundry.app.util.setSafeOnClickListenerimport org.koin.androidx.viewmodel.ext.android.getViewModelclass RegisterActivity : BaseActivity() {    lateinit var paperPrefs: PaperPrefs    lateinit var loadingDialog: LoadingDialog    private val binding: ActivityRegisterBinding by binding(R.layout.activity_register)    private val viewModel: RegisterViewModel by lazy {        getViewModel(RegisterViewModel::class)    }    override fun onCreate(savedInstanceState: Bundle?) {        super.onCreate(savedInstanceState)        binding.apply {            lifecycleOwner = this@RegisterActivity            this.vm = viewModel        }        loadingDialog = LoadingDialog()        initViewModel()        binding.btnLogin.setSafeOnClickListener {            intent = Intent(this@RegisterActivity, LoginActivity::class.java)            startActivity(intent)            finish()        }        binding.btnRegister.setSafeOnClickListener {            viewModel.register()        }    }    private fun initViewModel() {        viewModel.registerResponse.observe(this, Observer {            handleWhenRegisSuccess(it)        })        viewModel.showProgressLiveData.observe(this, Observer { showLoading ->            if (showLoading) {                if(loadingDialog != null){                    if(!loadingDialog.isShowLoad())                        loadingDialog.showProgressDialog(this, "Mohon tunggu…")                    else {                        loadingDialog.dismissDialog()                        loadingDialog.showProgressDialog(this, "Mohon tunggu…")                    }                }            } else {                loadingDialog.dismissDialog()            }        })        viewModel.showError.observe(this, Observer { showError ->            when (showError) {                "invalidLengthFullname" -> WarningMessage(this, "", "Nama lengkap minimal harus 6 karakter")                "invalidEmail" -> WarningMessage(this, "", "Email tidak valid, hanya huruf (a-z), angka (0-9), dan titik (.)")                "invalidPhoneFormat" -> WarningMessage(this, "", "Nomor telepon harus diawali dengan 08")                "invalidPhone" -> WarningMessage(this, "", "Nomor telepon minimal harus 10 angka")                "invalidLengthPass" -> WarningMessage(this, "", "Kata sandi minimal harus 8 karakter")                "invalidFormatPass" -> WarningMessage(this, "", "Password tidak valid, Setidaknya harus terdapat huruf kapital, huruf kecil, angka dan tanpa spasi.")                "invalidConfirmPass" -> WarningMessage(this, "", "Konfirmasi password tidak sesuai")                else -> ErrorMessage(this, "", showError)            }        })    }    private fun handleWhenRegisSuccess(it: LoginResponse?) {        SuccessMessage(this, "", "Registrasi Anda berhasil!", object : FGCallback {            override fun onCallback() {                finish()            }        })    }}