package com.fidilaundry.app.ui.authimport android.content.Intentimport android.os.Bundleimport android.text.method.PasswordTransformationMethodimport android.view.Viewimport androidx.lifecycle.Observerimport com.fidilaundry.app.Rimport com.fidilaundry.app.basearch.localpref.PaperPrefsimport com.fidilaundry.app.basearch.viewmodel.LoginViewModelimport com.fidilaundry.app.databinding.ActivityLoginBindingimport com.fidilaundry.app.model.response.LoginResponseimport com.fidilaundry.app.model.response.ProfileResponseimport com.fidilaundry.app.ui.MainActivityimport com.fidilaundry.app.ui.base.BaseActivityimport com.fidilaundry.app.util.LoadingDialogimport com.fidilaundry.app.util.fdialog.ErrorMessageimport com.fidilaundry.app.util.setSafeOnClickListenerimport com.onesignal.OneSignalimport org.json.JSONExceptionimport org.koin.androidx.viewmodel.ext.android.getViewModelclass LoginActivity : BaseActivity() {    lateinit var paperPrefs: PaperPrefs    lateinit var loadingDialog: LoadingDialog    private var isPasswordShow: Boolean = false    private val binding: ActivityLoginBinding by binding(R.layout.activity_login)    private val viewModel: LoginViewModel by lazy {        getViewModel(LoginViewModel::class)    }    override fun onCreate(savedInstanceState: Bundle?) {        super.onCreate(savedInstanceState)        binding.apply {            lifecycleOwner = this@LoginActivity            this.vm = viewModel        }        loadingDialog = LoadingDialog()        paperPrefs = PaperPrefs(this@LoginActivity)        initViewModel()        binding.etPassword.transformationMethod = PasswordTransformationMethod()        binding.btnRegister.setSafeOnClickListener {            intent = Intent(this@LoginActivity, RegisterActivity::class.java)            startActivity(intent)        }        binding.btnLogin.setSafeOnClickListener {            viewModel.loginInit(getOneSignalUserID())        }        binding.ivPassword.setSafeOnClickListener {            isPasswordShow = !isPasswordShow            binding.etPassword.transformationMethod = if (isPasswordShow) null else PasswordTransformationMethod()            binding.etPassword.setSelection(binding.etPassword.text?.length!!)        }    }    private fun initViewModel() {        viewModel.loginResponse.observe(this, Observer {            handleWhenLoginSuccess(it)        })        viewModel.profileResponse.observe(this, Observer {            handleWhenProfileSuccess(it)        })        viewModel.showProgressLiveData.observe(this, Observer { showLoading ->            if (showLoading) {                if(loadingDialog != null){                    if(!loadingDialog.isShowLoad())                        loadingDialog.showProgressDialog(this, "Mohon tunggu…")                    else {                        loadingDialog.dismissDialog()                        loadingDialog.showProgressDialog(this, "Mohon tunggu…")                    }                }            } else {                loadingDialog.dismissDialog()            }        })        viewModel.showError.observe(this, Observer { showError ->            when (showError) {                "emptyAll" -> ErrorMessage(this, "Masukkan email atau telepon", showError)                "emptyPass" -> ErrorMessage(this, "Masukkan kata sandi", showError)                else -> ErrorMessage(this, "", showError)            }        })    }    private fun handleWhenProfileSuccess(it: ProfileResponse?) {        paperPrefs.setDataProfile(it?.results!!)        intent = Intent(this@LoginActivity, MainActivity::class.java)        intent.flags = Intent.FLAG_ACTIVITY_CLEAR_TASK or Intent.FLAG_ACTIVITY_NEW_TASK        startActivity(intent)        finish()    }    private fun handleWhenLoginSuccess(it: LoginResponse?) {        paperPrefs.setToken(it?.results?.token.toString())        viewModel.getProfile()    }    private fun getOneSignalUserID(): String {        var userId = try {            if (OneSignal.getDeviceState()!!.userId == null)                ""            else {                if(OneSignal.getDeviceState()!!.userId  == null)                    ""                else                    OneSignal.getDeviceState()!!.userId            }        } catch (e: JSONException) { "" }        return userId    }}